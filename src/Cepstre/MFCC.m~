function [MFCC,frames,indexes] = MFCC(signal, Fe, Tf, Ts, alpha, F, Nf, N)
    %% Inputs:
    
    % signal
    % Fe: sampling frequency (Hz)
    % Tf: a frame duration (ms)
    % Ts: an overlap duartion (ms)
    % alpha: Pre-emphasis filter coefficient
    % F: Frequency boundaries (min,max)
    % Nf: number of filters in the MEL Filter Bank
    % N: number of CC
    
    %% Outputs:
    % MFCC: MFCC coefficients
    
    %% START:
    nf = round(1E-3*Tf*Fe);     % Duration of the frame --> number of samples
    ns  = round(1E-3*Ts*Fe);    % Duration of the overlap --> number of samples
    
    NFFT = 2^nextpow2(nf);      % NFFT
    K = (NFFT/2)+1;
        
    % Step1: Pre-emphasis
    signal = filter([1 -alpha],1,signal);
    
    
    % Step2: Framing + Windowing
    [frames,indexes] = Framing(signal,nf,ns);
    
    % Step3: DFT + Square
    frames = abs(fft(frames,NFFT)).^2;
    
    % Use the MEL Filter Bank for each frame:
    [H,~] = MelFilterBank(Nf,K,F,Fe); % MEL Filter Bank
    framesF = H*DSPofFrames(1:K,:); % Filtered frames
    
    figure(5),
    plot(framesF(:,100))
    axis tight
    xlabel('N')
    ylabel('Filtered |FFT|')
    title('Filtered |FFT| of the 100th windowed frame (MEL Filter-Bank)')
    
    % Apply DCT Transformation:
    dct = DCT(N,Nf); % DCT matrix
    MFCC = dct*log(framesF); 
    
    size(MFCC)
    figure(6),
    plot(MFCC(:,100))
    xlabel('N')
    ylabel('Amplitude')
    title('Cepstrum')
    % Cepstral lifter:
    lifter = Lifter(N,l);
    
    % MFCC:
    MFCC = diag(lifter)*MFCC;
    figure(7),
    plot(MFCC(:,100))
    xlabel('N')
    ylabel('Coefficients')
    title('MFCC')
    %% END.
end

    
    
    
    
    
    